-- Train Ticket Management System Database Schema
-- This file contains all the SQL DDL statements for creating the database tables

-- Drop tables if they exist (for clean startup)
DROP TABLE IF EXISTS passenger;
DROP TABLE IF EXISTS booking;
DROP TABLE IF EXISTS fare_type;
DROP TABLE IF EXISTS train_schedule;
DROP TABLE IF EXISTS train;
DROP TABLE IF EXISTS users;

-- 1. Users table
CREATE TABLE users (
    user_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE,
    password VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    phone VARCHAR(15) NOT NULL,
    role VARCHAR(10) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);

-- 2. Train table
CREATE TABLE train (
    train_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    train_name VARCHAR(100) NOT NULL,
    source VARCHAR(100) NOT NULL,
    destination VARCHAR(100) NOT NULL,
    departure_time TIME NOT NULL,
    arrival_time TIME NOT NULL,
    status VARCHAR(10) DEFAULT 'ACTIVE'
);

-- 3. TrainSchedule table
CREATE TABLE train_schedule (
    schedule_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    train_id INT NOT NULL,
    day_of_week VARCHAR(3),
    FOREIGN KEY (train_id) REFERENCES train(train_id) ON DELETE CASCADE
);

-- 4. FareType table
CREATE TABLE fare_type (
    fare_type_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    train_id INT NOT NULL,
    class_type VARCHAR(20),
    price DECIMAL(10,2) NOT NULL,
    seats_available INT NOT NULL,
    FOREIGN KEY (train_id) REFERENCES train(train_id) ON DELETE CASCADE
);

-- 5. Booking table
CREATE TABLE booking (
    booking_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INT NOT NULL,
    train_id INT NOT NULL,
    fare_type_id INT NOT NULL,
    journey_date DATE NOT NULL,
    booking_date DATE DEFAULT CURRENT_DATE,
    total_fare DECIMAL(10,2) NOT NULL,
    status VARCHAR(15) DEFAULT 'CONFIRMED',
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (train_id) REFERENCES train(train_id),
    FOREIGN KEY (fare_type_id) REFERENCES fare_type(fare_type_id)
);

-- 6. Passenger table
CREATE TABLE passenger (
    passenger_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    booking_id INT NOT NULL,
    name VARCHAR(100) NOT NULL,
    age INT NOT NULL,
    gender VARCHAR(10),
    id_proof VARCHAR(50) NOT NULL,
    FOREIGN KEY (booking_id) REFERENCES booking(booking_id) ON DELETE CASCADE
);

-- Create indexes for better performance
CREATE INDEX idx_users_username ON users(username);
CREATE INDEX idx_users_email ON users(email);
CREATE INDEX idx_users_role ON users(role);
CREATE INDEX idx_train_source_destination ON train(source, destination);
CREATE INDEX idx_train_schedule_train_day ON train_schedule(train_id, day_of_week);
CREATE INDEX idx_fare_type_train ON fare_type(train_id);
CREATE INDEX idx_booking_user ON booking(user_id);
CREATE INDEX idx_booking_train ON booking(train_id);
CREATE INDEX idx_booking_journey_date ON booking(journey_date);
CREATE INDEX idx_passenger_booking ON passenger(booking_id);

-- Insert sample data for testing (optional)
-- Sample admin user (password: Admin@123 - BCrypt encrypted)
INSERT INTO users (username, password, email, phone, role) 
VALUES ('admin', '$2a$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', 'admin@trainsystem.com', '9876543210', 'ADMIN');

-- Sample regular user (password: John@123 - BCrypt encrypted)
INSERT INTO users (username, password, email, phone, role) 
VALUES ('john_doe', '$2a$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', 'john.doe@email.com', '9876543211', 'USER');

-- Sample train
INSERT INTO train (train_name, source, destination, departure_time, arrival_time, status) 
VALUES ('Rajdhani Express', 'Delhi', 'Mumbai', '08:00:00', '20:00:00', 'ACTIVE');

-- Sample train schedule
INSERT INTO train_schedule (train_id, day_of_week) 
VALUES (1, 'MON'), (1, 'WED'), (1, 'FRI');

-- Sample fare types
INSERT INTO fare_type (train_id, class_type, price, seats_available) 
VALUES (1, '1AC', 2500.00, 50), (1, '2AC', 1500.00, 100), (1, 'SL', 800.00, 200);